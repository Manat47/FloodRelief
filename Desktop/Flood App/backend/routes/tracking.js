const express = require("express");
const mongoose = require("mongoose");
const Tracking = require("../models/Tracking");
const router = express.Router();

// üìå 3Ô∏è‚É£ POST /tracking ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
router.post("/", async (req, res) => {
    try {
      console.log("üìå Creating new tracking record:", req.body);  // Debug log
  
      const { request_id, victim_id, status_updates } = req.body;
  
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ tracking ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö request ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const existingTracking = await Tracking.findOne({ request_id });
      if (existingTracking) {
        return res.status(400).json({ message: "Tracking already exists for this request." });
      }
  
      const tracking = new Tracking({ request_id, victim_id, status_updates });
      await tracking.save();
  
      res.status(201).json(tracking);
    } catch (error) {
      console.error("‚ùå Error creating tracking:", error.message);
      res.status(500).json({ error: error.message });
    }
  });

// üìå 1Ô∏è‚É£ API ‡πÉ‡∏´‡πâ Victim ‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠
router.get("/:request_id", async (req, res) => {
  try {
    console.log("üîé Request ID:", req.params.request_id);  // ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤
    const tracking = await Tracking.findOne({ request_id: req.params.request_id });
    if (!tracking) return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" });
    res.json(tracking);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// üìå 2Ô∏è‚É£ POST /tracking/update ‚Üí ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠
router.post("/update", async (req, res) => {
    try {
      console.log("üìå Received data:", req.body);  // ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

      const { request_id, status, message } = req.body;
  
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Tracking ‡∏Ç‡∏≠‡∏á Request ‡∏ô‡∏µ‡πâ
      let tracking = await Tracking.findOne({ request_id });
  
      if (!tracking) {
        return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°" });
      }
  
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
      tracking.status_updates.push({ status, message });
  
      await tracking.save();
      res.json(tracking);
    } catch (error) {
      console.error("‚ùå Error:", error.message); // ‡πÄ‡∏û‡∏¥‡πà‡∏° log error
      res.status(500).json({ error: error.message });
    }
  });

module.exports = router;
